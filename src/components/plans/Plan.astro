---
import type Stripe from "stripe";
import ButtonLink from "../ButtonLink.astro";

interface Props {
    product: Stripe.Product;
    price: Stripe.Price;
}

const { product, price } = Astro.props as Props;
const features: string[] = JSON.parse(product.metadata['features']);
---
<div class="outer">
    <h2>{ product.name }</h2>
    
    <div>
        <span class="price">${ (price.unit_amount || 600) / 100 }</span>
        { price.recurring && <span class="unit">per { price.recurring.interval }</span> }
    </div>

    <hr />

    <div class="features">
        {features.map(feature => (
            <div class="feature">
                { /* mdi:check https://icon-sets.iconify.design/mdi/check/ */ }
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="currentColor" d="M21 7L9 19l-5.5-5.5l1.41-1.41L9 16.17L19.59 5.59L21 7Z"/></svg>
                {feature}
            </div>
        ))}
    </div>

    <ButtonLink href={`/register?p=${price.id}`}>Select</ButtonLink>
</div>

<style>
    .outer {
        border: #000000 2px solid;
        border-radius: 1rem;
        padding: 1.5rem;
        background: #ffffff;
        box-shadow: #00000044 0px 0px 20px;
    }

    .price {
        font-size: 3em;
        font-weight: bold;
    }

    .features {
        display: flex;
        flex-direction: column;
        gap: 4px;
        margin: 1rem 0 1rem 0;
    }

    .feature {
        font-size: 1.15em;

        /* use grid instead of flex to fix inconsistent icon sizing on smaller devices */
        display: grid;
        grid-template-columns: 32px 1fr;
        gap: 0.25rem;
        align-items: center;
    }

    .feature svg {
        width: 32px;
        height: 32px;
        color: #000000;
        border-radius: 100%;
    }
</style>
